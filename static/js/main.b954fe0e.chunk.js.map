{"version":3,"sources":["components/card/card-component.jsx","components/card-list/card-list.component.jsx","components/search/search.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","monster","data","className","alt","src","id","name","email","eachCard","card","nameIncludes","searchTerm","toLowerCase","includes","CardList","cards","filter","map","Search","searchHandler","placeholder","type","onChange","debounce","App","state","bind","fetch","then","response","json","users","setState","target","this","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yUAIaA,G,MAAO,SAAC,GAAD,IAASC,EAAT,EAAGC,KAAH,OAClB,sBAAKC,UAAU,iBAAf,UACE,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BJ,EAAQK,GAAlC,4BACtB,6BAAKL,EAAQM,OACb,4BAAIN,EAAQO,aCAVC,G,MAAW,SAAAC,GAAI,OACnB,cAAC,EAAD,CAAoBR,KAAMQ,GAAfA,EAAKJ,MAGZK,EAAe,SAACC,GAAD,OACnB,qBAAGL,KAAgBM,cAAcC,SAASF,KAG/BG,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOJ,EAAV,EAAUA,WAAV,OACtB,qBAAKT,UAAU,YAAf,SAEIa,EACGC,OAAON,EAAaC,IACpBM,IAAIT,M,OChBAU,G,MAAS,SAAC,GAAD,IAAGC,EAAH,EAAGA,cAAeC,EAAlB,EAAkBA,YAAlB,OACpB,uBACElB,UAAU,SACVmB,KAAK,SACLD,YAAaA,EACbE,SAAUC,mBAASJ,EAAe,SC8BvBK,G,kNAjCbC,MAAQ,CACNV,MAAO,GACPJ,WAAY,I,EAGdQ,cAAgB,EAAKA,cAAcO,KAAnB,gB,kEAEM,IAAD,OACnBC,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAW,EAAKC,SAAS,CAAEjB,MAAM,YAAKgB,U,uCAGpB,IAAXE,EAAU,EAAVA,OACfC,KAAKF,SAAS,CAAErB,WAAYsB,EAAOE,MAAMvB,kB,+BAGhC,IAAD,EACsBsB,KAAKT,MAA3BV,EADA,EACAA,MAAOJ,EADP,EACOA,WAEf,OACE,sBAAKT,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CACEkB,YAAY,kBACZD,cAAee,KAAKf,gBAEtB,cAAC,EAAD,CAAUJ,MAAOA,EAAOJ,WAAYA,W,GA5B1ByB,cCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.b954fe0e.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nimport './card.styles.css'\r\n\r\nexport const Card = ({ data: monster }) => (\r\n  <div className='card-container'>\r\n    <img alt='monster' src={`https://robohash.org/${monster.id}?set=set2&size=180x180`} />\r\n    <h2>{monster.name}</h2>\r\n    <p>{monster.email}</p>\r\n  </div>\r\n)\r\n","// import modules\r\nimport React from 'react'\r\nimport { Card } from '../card/card-component'\r\n\r\n// css\r\nimport './card-list.styles.css'\r\n\r\n// filter and map callbacks\r\nconst eachCard = card => (\r\n  <Card key={card.id} data={card} />\r\n)\r\n\r\nconst nameIncludes = (searchTerm) =>\r\n  ({ name }) => name.toLowerCase().includes(searchTerm)\r\n\r\n// CardList Module\r\nexport const CardList = ({ cards, searchTerm }) => (\r\n  <div className='card-list'>\r\n    {\r\n      cards\r\n        .filter(nameIncludes(searchTerm))\r\n        .map(eachCard)\r\n    }\r\n  </div>\r\n)\r\n","import React from 'react'\r\nimport { debounce } from 'lodash'\r\n\r\nimport './search.styles.css'\r\n\r\nexport const Search = ({ searchHandler, placeholder }) => (\r\n  <input\r\n    className='search'\r\n    type='search'\r\n    placeholder={placeholder}\r\n    onChange={debounce(searchHandler, 300)}\r\n  />\r\n)\r\n","import React, { Component } from 'react'\nimport { CardList } from './components/card-list/card-list.component'\nimport { Search } from './components/search/search.component'\n\nimport './App.css'\n\nclass App extends Component {\n  state = {\n    cards: [],\n    searchTerm: ''\n  };\n\n  searchHandler = this.searchHandler.bind(this)\n\n  componentDidMount () {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then((response) => response.json())\n      .then((users) => this.setState({ cards: [...users] }))\n  }\n\n  searchHandler ({ target }) {\n    this.setState({ searchTerm: target.value.toLowerCase() })\n  }\n\n  render () {\n    const { cards, searchTerm } = this.state\n\n    return (\n      <div className='App'>\n        <h1>Monsters Rolodex</h1>\n        <Search\n          placeholder='search monsters'\n          searchHandler={this.searchHandler}\n        />\n        <CardList cards={cards} searchTerm={searchTerm} />\n      </div>\n    )\n  }\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}
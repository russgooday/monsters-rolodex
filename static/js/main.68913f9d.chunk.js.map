{"version":3,"sources":["components/card/card-component.jsx","components/card-list/card-list.component.jsx","components/search/search.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","monster","data","className","alt","src","id","name","email","eachCard","card","nameIncludes","searchTerm","toLowerCase","includes","CardList","cards","filter","map","Search","searchHandler","placeholder","type","onChange","debounce","App","useState","title","state","setState","useEffect","a","fetch","response","json","users","fetchUsers","target","value","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4UAIaA,G,MAAO,SAAC,GAAD,IAASC,EAAT,EAAGC,KAAH,OAClB,sBAAKC,UAAU,iBAAf,UACE,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BJ,EAAQK,GAAlC,4BACtB,6BAAKL,EAAQM,OACb,4BAAIN,EAAQO,aCAVC,G,MAAW,SAAAC,GAAI,OACnB,cAAC,EAAD,CAAoBR,KAAMQ,GAAfA,EAAKJ,MAGZK,EAAe,SAACC,GAAD,OACnB,qBAAGL,KAAgBM,cAAcC,SAASF,KAG/BG,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOJ,EAAV,EAAUA,WAAV,OACtB,qBAAKT,UAAU,YAAf,SAEIa,EACGC,OAAON,EAAaC,IACpBM,IAAIT,M,OChBAU,G,MAAS,SAAC,GAAD,IAAGC,EAAH,EAAGA,cAAeC,EAAlB,EAAkBA,YAAlB,OACpB,uBACElB,UAAU,SACVmB,KAAK,SACLD,YAAaA,EACbE,SAAUC,mBAASJ,EAAe,SCiCvBK,G,MArCH,WAAO,IAAD,EAEUC,mBAAS,CACjCV,MAAO,GACPJ,WAAY,GACZe,MAAO,KALO,mBAETC,EAFS,KAEFC,EAFE,KAYhBC,qBAAU,YACQ,uCAAG,8BAAAC,EAAA,sEACMC,MAAM,8CADZ,cACXC,EADW,gBAEGA,EAASC,OAFZ,OAEXC,EAFW,OAIjBN,GAAS,SAAAD,GAAK,kCAAUA,GAAV,IAAiBZ,MAAM,YAAKmB,QAJzB,2CAAH,qDAOhBC,KACC,IArBa,IAuBTxB,EAAqBgB,EAArBhB,WAAYI,EAASY,EAATZ,MAEnB,OACE,sBAAKb,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CACEkB,YAAY,kBACZD,cAtBgB,SAAC,GAAgB,IAAdiB,EAAa,EAAbA,OACvBR,EAAS,2BAAKD,GAAN,IAAahB,WAAYyB,EAAOC,MAAMzB,oBAuB5C,cAAC,EAAD,CAAUG,MAAOA,EAAOJ,WAAYA,SC1B3B2B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.68913f9d.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nimport './card.styles.css'\r\n\r\nexport const Card = ({ data: monster }) => (\r\n  <div className='card-container'>\r\n    <img alt='monster' src={`https://robohash.org/${monster.id}?set=set2&size=180x180`} />\r\n    <h2>{monster.name}</h2>\r\n    <p>{monster.email}</p>\r\n  </div>\r\n)\r\n","// import modules\r\nimport React from 'react'\r\nimport { Card } from '../card/card-component'\r\n\r\n// css\r\nimport './card-list.styles.css'\r\n\r\n// filter and map callbacks\r\nconst eachCard = card => (\r\n  <Card key={card.id} data={card} />\r\n)\r\n\r\nconst nameIncludes = (searchTerm) =>\r\n  ({ name }) => name.toLowerCase().includes(searchTerm)\r\n\r\n// CardList Module\r\nexport const CardList = ({ cards, searchTerm }) => (\r\n  <div className='card-list'>\r\n    {\r\n      cards\r\n        .filter(nameIncludes(searchTerm))\r\n        .map(eachCard)\r\n    }\r\n  </div>\r\n)\r\n","import React from 'react'\r\nimport { debounce } from 'lodash'\r\n\r\nimport './search.styles.css'\r\n\r\nexport const Search = ({ searchHandler, placeholder }) => (\r\n  <input\r\n    className='search'\r\n    type='search'\r\n    placeholder={placeholder}\r\n    onChange={debounce(searchHandler, 300)}\r\n  />\r\n)\r\n","import React, { useState, useEffect } from 'react'\nimport { CardList } from './components/card-list/card-list.component'\nimport { Search } from './components/search/search.component'\n\nimport './App.css'\n\nconst App = () => {\n\n  const [state, setState] = useState({\n    cards: [],\n    searchTerm: '',\n    title: ''\n  })\n\n  const searchHandler = ({ target }) => {\n    setState({ ...state, searchTerm: target.value.toLowerCase() })\n  }\n\n  useEffect(() => {\n    const fetchUsers = async () => {\n      const response = await fetch('https://jsonplaceholder.typicode.com/users')\n      const users = await response.json()\n\n      setState(state => ({ ...state, cards: [...users] }))\n    }\n\n    fetchUsers()\n  }, [])\n\n  const {searchTerm, cards} = state\n\n  return (\n    <div className='App'>\n      <h1>Monsters Rolodex</h1>\n      <Search\n        placeholder='search monsters'\n        searchHandler={searchHandler}\n      />\n      <CardList cards={cards} searchTerm={searchTerm} />\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}